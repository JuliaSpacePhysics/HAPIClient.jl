var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/#Main-Functions","page":"API Reference","title":"Main Functions","text":"","category":"section"},{"location":"api/#Core-HAPI-Interface","page":"API Reference","title":"Core HAPI Interface","text":"","category":"section"},{"location":"api/#HAPIClient.hapi-api","page":"API Reference","title":"HAPIClient.hapi","text":"Main interface to HAPI servers and provides multiple dispatch for different use cases:\n\nhapi() - List available HAPI servers (get_servers)\nhapi(server) - Get catalog of datasets from a server (get_catalog)\nhapi(server, dataset) - Get parameter information for a dataset (get_parameters)\nhapi(server, dataset, parameters) - Get parameter information for specific parameters (get_parameters)\nhapi(server, dataset, tmin, tmax) - Get all data for a dataset in a time range (get_data)\nhapi(server, dataset, parameters, tmin, tmax) - Get specific parameter data in a time range (get_data)\n\n\n\n\n\n","category":"function"},{"location":"api/#Data-Retrieval","page":"API Reference","title":"Data Retrieval","text":"","category":"section"},{"location":"api/#HAPIClient.get_data-api","page":"API Reference","title":"HAPIClient.get_data","text":"get_data(server, dataset, parameters, tmin, tmax; format=\"csv\")\n\nGet data and metadata from a HAPI server for a given dataset and parameters within a time range [tmin, tmax].\n\nSupported data formats: \"csv\", \"binary\", \"json\".\n\n\n\n\n\nget_data(path, tmin, tmax; kwargs...)\n\nGet data and metadata using a path in the format \"server/dataset/parameter\".\n\n\n\n\n\n","category":"function"},{"location":"api/#Types","page":"API Reference","title":"Types","text":"","category":"section"},{"location":"api/#Data-Variables","page":"API Reference","title":"Data Variables","text":"","category":"section"},{"location":"api/#HAPIClient.HAPIVariable-api","page":"API Reference","title":"HAPIClient.HAPIVariable","text":"HAPIVariable(data, params, i)\n\nConstruct a HAPIVariable object from CSV.File data and params at index i.\n\n\n\n\n\nHAPIVariable(data, params, i)\n\nConstruct a HAPIVariable object from a JSON-parsed data and params at index i.\n\n\n\n\n\nHAPIVariable(d, i)\n\nConstruct a HAPIVariable object from a JSON-parsed Dict d (containing parameters) at index i.\n\n\n\n\n\n","category":"type"},{"location":"api/#HAPIClient.HAPIVariables-api","page":"API Reference","title":"HAPIClient.HAPIVariables","text":"A thin wrapper over NamedTuple for HAPI variables that shares the same time axis.\n\n\n\n\n\n","category":"type"},{"location":"api/#Constants","page":"API Reference","title":"Constants","text":"","category":"section"},{"location":"api/#Predefined-Servers","page":"API Reference","title":"Predefined Servers","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"HAPIClient.jl provides convenient constants for commonly used HAPI servers:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"CDAWeb - NASA's Coordinated Data Analysis Web\nCSA - ESA's Cluster Science Archive","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"These are automatically exported and can be used directly:","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Use predefined server constants\ncatalog = hapi(CDAWeb)\ndata = hapi(CSA, \"C1_CP_FGM_FULL\", \"B_vec_xyz_gse\", start_time, end_time)","category":"page"},{"location":"api/#Examples","page":"API Reference","title":"Examples","text":"","category":"section"},{"location":"api/#Basic-Usage","page":"API Reference","title":"Basic Usage","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"using HAPIClient\nusing Dates\n\n# List servers\nservers = hapi()\n\n# Get catalog\ncatalog = hapi(CDAWeb)\n\n# Get data\ndata = hapi(CDAWeb, \"AC_H0_MFI\", \"Magnitude\", \n           DateTime(2001, 1, 1), DateTime(2001, 1, 2))","category":"page"},{"location":"api/#Working-with-Retrieved-Data","page":"API Reference","title":"Working with Retrieved Data","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"# Access first variable\nvar = data[1]\n\n# Get values, timestamps, and metadata\nvalues = parent(var)\ntimestamps = times(var)\nmetadata = meta(var)","category":"page"},{"location":"api/#Public","page":"API Reference","title":"Public","text":"","category":"section"},{"location":"api/#HAPIClient.HAPIVariable-Tuple{Any, Any, Integer}","page":"API Reference","title":"HAPIClient.HAPIVariable","text":"HAPIVariable(data, params, i)\n\nConstruct a HAPIVariable object from a JSON-parsed data and params at index i.\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.HAPIVariable-Tuple{CSV.File, Any, Integer}","page":"API Reference","title":"HAPIClient.HAPIVariable","text":"HAPIVariable(data, params, i)\n\nConstruct a HAPIVariable object from CSV.File data and params at index i.\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.HAPIVariable-Tuple{Dict, Integer}","page":"API Reference","title":"HAPIClient.HAPIVariable","text":"HAPIVariable(d, i)\n\nConstruct a HAPIVariable object from a JSON-parsed Dict d (containing parameters) at index i.\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.HAPIVariables","page":"API Reference","title":"HAPIClient.HAPIVariables","text":"A thin wrapper over NamedTuple for HAPI variables that shares the same time axis.\n\n\n\n\n\n","category":"type"},{"location":"api/#HAPIClient.get_data-NTuple{5, Any}","page":"API Reference","title":"HAPIClient.get_data","text":"get_data(server, dataset, parameters, tmin, tmax; format=\"csv\")\n\nGet data and metadata from a HAPI server for a given dataset and parameters within a time range [tmin, tmax].\n\nSupported data formats: \"csv\", \"binary\", \"json\".\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.get_data-Tuple{Any, Any, Any}","page":"API Reference","title":"HAPIClient.get_data","text":"get_data(path, tmin, tmax; kwargs...)\n\nGet data and metadata using a path in the format \"server/dataset/parameter\".\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.hapi","page":"API Reference","title":"HAPIClient.hapi","text":"Main interface to HAPI servers and provides multiple dispatch for different use cases:\n\nhapi() - List available HAPI servers (get_servers)\nhapi(server) - Get catalog of datasets from a server (get_catalog)\nhapi(server, dataset) - Get parameter information for a dataset (get_parameters)\nhapi(server, dataset, parameters) - Get parameter information for specific parameters (get_parameters)\nhapi(server, dataset, tmin, tmax) - Get all data for a dataset in a time range (get_data)\nhapi(server, dataset, parameters, tmin, tmax) - Get specific parameter data in a time range (get_data)\n\n\n\n\n\n","category":"function"},{"location":"api/#Private","page":"API Reference","title":"Private","text":"","category":"section"},{"location":"api/#HAPIClient.Parameter","page":"API Reference","title":"HAPIClient.Parameter","text":"Parameter\n\nRepresents a HAPI parameter with validation according to the specification.\n\nRequired fields:\n\nname: String identifier for the parameter\ntype: One of \"string\", \"double\", \"integer\", or \"isotime\"\nunits: String, array of strings, or nothing for dimensionless quantities\nfill: String or nothing indicating no fill value\n\nType-specific requirements:\n\nFor string and isotime types: must specify length\nFor array parameters: must specify size\n\nOptional fields:\n\ndescription: Brief description of the parameter\nlabel: Display label or array of labels\nsize: Array dimensions for array parameters\nbins: Array parameter bin information\nstringType: For string parameters that represent URIs\ncoordinateSystemName: Name of coordinate system for vector quantities\nvectorComponents: Component names for vector quantities\n\n\n\n\n\n","category":"type"},{"location":"api/#HAPIClient.Server-Tuple{Any}","page":"API Reference","title":"HAPIClient.Server","text":"Get a HAPI server instance by its ID.\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.format-Tuple{Any}","page":"API Reference","title":"HAPIClient.format","text":"Default format for HAPI servers.\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.get_capabilities-Tuple{Any}","page":"API Reference","title":"HAPIClient.get_capabilities","text":"get_capabilities(server) -> Dict\n\nGet server capabilities.\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.get_catalog-Tuple{Any}","page":"API Reference","title":"HAPIClient.get_catalog","text":"get_catalog(server)\n\nGet a list of datasets available from the server.\n\nHAPI info response JSON structure: https://github.com/hapi-server/data-specification/blob/master/hapi-dev/HAPI-data-access-spec-dev.md#35-catalog\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.get_parameters-Tuple{Any, Any, Any}","page":"API Reference","title":"HAPIClient.get_parameters","text":"get_parameters(server, dataset, parameters)\n\nGet a dictionary containing the HAPI info metadata for each parameter in the comma-separated string parameters.\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.get_parameters-Tuple{Any, Any}","page":"API Reference","title":"HAPIClient.get_parameters","text":"get_parameters(server, dataset)\n\nGet a dictionary containing the HAPI info metadata for all parameters in the dataset. Returns a tuple of (info, parameters) where info is the full response and parameters is a Vector of Parameter objects.\n\nHAPI info response JSON structure: https://github.com/hapi-server/data-specification/blob/master/hapi-dev/HAPI-data-access-spec-dev.md#36-info\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.get_servers","page":"API Reference","title":"HAPIClient.get_servers","text":"get_servers()\n\nGet a list of available HAPI server URLs from https://github.com/hapi-server/servers/raw/master/all.txt\n\n\n\n\n\n","category":"function"},{"location":"api/#HAPIClient.is_time_parameter-Tuple{HAPIClient.Parameter}","page":"API Reference","title":"HAPIClient.is_time_parameter","text":"is_time_parameter(param::Parameter)\n\nCheck if a parameter is a valid time parameter (first parameter in a dataset).\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.load_servers_from_json-Tuple{}","page":"API Reference","title":"HAPIClient.load_servers_from_json","text":"load_servers_from_json(; url=DEFAULT_SERVERS_JSON_URL, register=false)\n\nLoad HAPI servers from a JSON file at the specified URL.\n\n\n\n\n\n","category":"method"},{"location":"api/#HAPIClient.parameters-Tuple{Any}","page":"API Reference","title":"HAPIClient.parameters","text":"Parse parameters into a Vector of Parameter objects and validate first parameter is time.\n\n\n\n\n\n","category":"method"},{"location":"usage/#Usage-Guide","page":"Usage","title":"Usage Guide","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"This guide provides detailed examples of how to use HAPIClient.jl to access heliophysics data from HAPI servers.","category":"page"},{"location":"usage/#Basic-Usage","page":"Usage","title":"Basic Usage","text":"","category":"section"},{"location":"usage/#Listing-Available-Servers","page":"Usage","title":"Listing Available Servers","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Start by exploring what HAPI servers are available:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"using HAPIClient\n\n# List all available HAPI servers\nservers = hapi()","category":"page"},{"location":"usage/#Getting-Dataset-Catalogs","page":"Usage","title":"Getting Dataset Catalogs","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Once you know which servers are available, you can browse their catalogs:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"# Get catalog of available datasets from CDAWeb\ncatalog = hapi(CDAWeb)","category":"page"},{"location":"usage/#Dataset-Information","page":"Usage","title":"Dataset Information","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Get detailed information about parameters in a specific dataset:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"dataset = \"AC_H0_MFI\"\nparams = hapi(CDAWeb, dataset)","category":"page"},{"location":"usage/#Data-Retrieval-and-Access","page":"Usage","title":"Data Retrieval and Access","text":"","category":"section"},{"location":"usage/#Basic-Data-Download","page":"Usage","title":"Basic Data Download","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Retrieve data for specific parameters within a time range:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"using Dates\n\ndataset = \"AC_H0_MFI\"\nparameters = \"Magnitude,BGSEc\"\nstart_time = DateTime(2001, 1, 1, 5, 0, 0)\nend_time = DateTime(2001, 1, 1, 6, 0, 0)\n\n# Retrieve the data\ndata = hapi(CDAWeb, dataset, parameters, start_time, end_time)","category":"page"},{"location":"usage/#Alternative-Path-Format","page":"Usage","title":"Alternative Path Format","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"You can also use a path-like format for data retrieval:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"# Alternative method using path format\ndata = get_data(\"CDAWeb/AC_H0_MFI/Magnitude,BGSEc\", start_time, end_time)","category":"page"},{"location":"usage/#Accessing-Retrieved-Data","page":"Usage","title":"Accessing Retrieved Data","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Once you have retrieved data, you can access individual variables:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Magnitude = data.Magnitude # or data[1] if you know the order (same as `parameters` order)\nBGSEc = data.BGSEc # or data[2]\nvar = data[2]","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Retrieve the values","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"values = parent(var)","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Retrieve the timestamps","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"timestamps = times(var)","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Retrieve the metadata","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"metadata = meta(var)","category":"page"},{"location":"usage/#Working-with-Different-Servers","page":"Usage","title":"Working with Different Servers","text":"","category":"section"},{"location":"usage/#CSA-Example","page":"Usage","title":"CSA Example","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"# Example with CSA (Cluster Science Archive) server\ncsa_dataset = \"C4_CP_FGM_FULL\"\ncsa_parameters = \"B_vec_xyz_gse,B_mag\"\ncsa_start = DateTime(2001, 6, 11, 0, 0, 0)\ncsa_end = DateTime(2001, 6, 11, 0, 1, 0)\ncsa_data = hapi(CSA, csa_dataset, csa_parameters, csa_start, csa_end)","category":"page"},{"location":"usage/#Data-Analysis","page":"Usage","title":"Data Analysis","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"The retrieved data integrates well with Julia's ecosystem:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"using CairoMakie\n\nf = Figure()\nfor (i, var) in enumerate(data)\n    m = meta(var)\n    ax = Axis(f[i,1]; xlabel=\"Time\", ylabel=m[\"name\"], title=m[\"description\"])\n    t = times(var)\n    for c in eachcol(var)\n        lines!(t, c)\n    end\n    i != length(data) && hidexdecorations!(; grid=false)\nend\nf","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"For advanced visualization capabilities, HAPIClient.jl works well with the SPEDAS.jl ecosystem. See the SPEDAS.jl quickstart guide for detailed visualization examples.","category":"page"},{"location":"#HAPIClient.jl","page":"Home","title":"HAPIClient.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: DOI) (Image: Aqua QA) (Image: Coverage)","category":"page"},{"location":"","page":"Home","title":"Home","text":"A Julia client for the Heliophysics Application Programmer's Interface (HAPI).","category":"page"},{"location":"","page":"Home","title":"Home","text":"HAPIClient.jl makes it easy to access heliophysics data from HAPI-compliant servers. The package supports:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Listing available HAPI servers (See HAPI Server Browser)\nBrowsing catalogs of datasets\nRetrieving parameter information\nDownloading time series data\nIntegration with Julia's ecosystem (Dates, Tables, Unitful)","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"HAPIClient\")","category":"page"},{"location":"#Quick-Start","page":"Home","title":"Quick Start","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using HAPIClient\nusing Dates\n\n# Get data from CDAWeb\ndataset = \"AC_H0_MFI\"\nparameters = \"Magnitude,BGSEc\"\nstart_time = DateTime(2001, 1, 1, 5, 0, 0)\nend_time = DateTime(2001, 1, 1, 6, 0, 0)\ndata = hapi(CDAWeb, dataset, parameters, start_time, end_time)","category":"page"},{"location":"#Navigation","page":"Home","title":"Navigation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Usage - Detailed usage examples and tutorials\nAPI Reference - Complete API documentation","category":"page"}]
}
